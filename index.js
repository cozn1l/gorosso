/*
 * =================================================================
 * Gorosso E-commerce System - Backend
 * =================================================================
 * * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–Ω—ã–π –∫–æ–¥ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏:
 * 1. Express API –¥–ª—è –≤—ã–¥–∞—á–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤.
 * 2. Telegram Bot –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤.
 * * –î–ª—è –∑–∞–ø—É—Å–∫–∞:
 * 1. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞.
 * 2. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –∫–∞–∫ `index.js`.
 * 3. –í —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `products.json` (–µ–≥–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–∏–∂–µ).
 * 4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install express node-telegram-bot-api cors body-parser
 * 5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: node index.js
 */

const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const fs = require('fs');
const path = require('path');
const TelegramBot = require('node-telegram-bot-api');

// --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
const TOKEN = '8196897207:AAH49lwaEbtYG-lPH5X6tmDMPHm2p1KYZFw'; // <-- –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
const ADMIN_CHAT_ID = 1056083125; // <-- –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram Chat ID
const WEB_APP_URL = 'https://cozn1l.github.io/gorosso/'; // <-- –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
const PAYMENTS_PROVIDER_TOKEN = '6395449203:TEST:f1ae3bd358fbed85786a'; // <-- –í–ê–ñ–ù–û: –¢–æ–∫–µ–Ω –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –ø–ª–∞—Ç–µ–∂–µ–π (Stripe, YooKassa –∏ —Ç.–¥.)

const PRODUCTS_DB_PATH = path.join(__dirname, 'products.json');

// --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ---
const app = express();
const bot = new TelegramBot(TOKEN, { polling: true });

app.use(cors());
app.use(bodyParser.json());

// --- –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –†–ê–ë–û–¢–´ –° "–ë–ê–ó–û–ô –î–ê–ù–ù–´–•" (JSON) ---

// –ß—Ç–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
const readProducts = () => {
    try {
        const data = fs.readFileSync(PRODUCTS_DB_PATH, 'utf8');
        return JSON.parse(data);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ products.json:", error);
        return [];
    }
};

// –ó–∞–ø–∏—Å—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ —Ñ–∞–π–ª
const writeProducts = (products) => {
    try {
        fs.writeFileSync(PRODUCTS_DB_PATH, JSON.stringify(products, null, 2), 'utf8');
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª products.json:", error);
    }
};

// --- –ü–£–ë–õ–ò–ß–ù–´–ô API –î–õ–Ø –§–†–û–ù–¢–ï–ù–î–ê ---

// Endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
app.get('/api/products', (req, res) => {
    const products = readProducts();
    res.json(products);
});

// --- –õ–û–ì–ò–ö–ê TELEGRAM –ë–û–¢–ê ---

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω Gorosso!', {
        reply_markup: {
            inline_keyboard: [
                [{ text: 'üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω', web_app: { url: WEB_APP_URL } }]
            ]
        }
    });
});

// --- –ê–î–ú–ò–ù–°–ö–ò–ï –ö–û–ú–ê–ù–î–´ ---

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
const isAdmin = (chatId) => chatId === ADMIN_CHAT_ID;

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ (–¥–ª—è –∞–¥–º–∏–Ω–∞)
bot.onText(/\/products/, (msg) => {
    const chatId = msg.chat.id;
    if (!isAdmin(chatId)) {
        return bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.");
    }

    const products = readProducts();
    if (products.length === 0) {
        return bot.sendMessage(chatId, "–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç.");
    }

    let response = "üìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:\n\n";
    products.forEach(p => {
        response += `ID: ${p.id}\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${p.name}\n–¶–µ–Ω–∞: ${p.price} —Ä—É–±.\n\n`;
    });
    bot.sendMessage(chatId, response);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
// –§–æ—Ä–º–∞—Ç: /addproduct –ù–∞–∑–≤–∞–Ω–∏–µ;–¶–µ–Ω–∞;–û–ø–∏—Å–∞–Ω–∏–µ;URL_–∫–∞—Ä—Ç–∏–Ω–∫–∏
bot.onText(/\/addproduct (.+)/, (msg, match) => {
    const chatId = msg.chat.id;
    if (!isAdmin(chatId)) {
        return bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.");
    }

    const params = match[1].split(';');
    if (params.length !== 4) {
        return bot.sendMessage(chatId, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n/addproduct –ù–∞–∑–≤–∞–Ω–∏–µ;–¶–µ–Ω–∞;–û–ø–∏—Å–∞–Ω–∏–µ;URL_–∫–∞—Ä—Ç–∏–Ω–∫–∏");
    }

    const [name, price, description, imageUrl] = params;
    const products = readProducts();
    const newProduct = {
        id: Date.now(), // –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID
        name: name.trim(),
        price: parseInt(price.trim(), 10),
        description: description.trim(),
        imageUrl: imageUrl.trim()
    };

    products.push(newProduct);
    writeProducts(products);

    bot.sendMessage(chatId, `‚úÖ –¢–æ–≤–∞—Ä "${newProduct.name}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!`);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
bot.onText(/\/delproduct (.+)/, (msg, match) => {
    const chatId = msg.chat.id;
    if (!isAdmin(chatId)) {
        return bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.");
    }
    
    const idToDelete = parseInt(match[1].trim(), 10);
    let products = readProducts();
    const initialLength = products.length;

    products = products.filter(p => p.id !== idToDelete);

    if (products.length === initialLength) {
        return bot.sendMessage(chatId, `‚ùå –¢–æ–≤–∞—Ä —Å ID ${idToDelete} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
    }

    writeProducts(products);
    bot.sendMessage(chatId, `üóëÔ∏è –¢–æ–≤–∞—Ä —Å ID ${idToDelete} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.`);
});


// --- –û–ë–†–ê–ë–û–¢–ö–ê –î–ê–ù–ù–´–• –ò–ó WEB APP (–ö–û–†–ó–ò–ù–ê) ---

bot.on('web_app_data', (msg) => {
    try {
        const chatId = msg.chat.id;
        const data = JSON.parse(msg.web_app_data.data);
        
        if (!data || Object.keys(data).length === 0) {
            return bot.sendMessage(chatId, "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã.");
        }

        const allProducts = readProducts();
        let totalPrice = 0;
        const prices = [];
        let invoiceDescription = "–í–∞—à –∑–∞–∫–∞–∑ –≤ Gorosso:\n";

        for (const itemId in data) {
            const product = allProducts.find(p => p.id == itemId);
            const quantity = data[itemId];
            if (product) {
                const itemPrice = product.price * quantity;
                totalPrice += itemPrice;
                prices.push({
                    label: `${product.name} x${quantity}`,
                    // –°—É–º–º–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                    amount: itemPrice * 100 
                });
                invoiceDescription += `- ${product.name} x${quantity}\n`;
            }
        }
        
        if (totalPrice === 0) {
             return bot.sendMessage(chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É
        bot.sendInvoice(
            chatId,
            '–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ Gorosso', // title
            invoiceDescription, // description
            `order_${Date.now()}`, // payload
            PAYMENTS_PROVIDER_TOKEN, // provider_token
            'RUB', // currency
            prices // prices
        ).then(() => {
            console.log(`–°—á–µ—Ç –Ω–∞ ${totalPrice} —Ä—É–±. –≤—ã—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`);
        }).catch((error) => {
            console.error("–û—à–∏–±–∫–∞ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞:", error);
            bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App:', error);
        bot.sendMessage(msg.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞.");
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
bot.on('pre_checkout_query', (query) => {
    bot.answerPreCheckoutQuery(query.id, true);
});

bot.on('successful_payment', (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, `‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑ –Ω–∞ —Å—É–º–º—É ${msg.successful_payment.total_amount / 100} ${msg.successful_payment.currency}.`);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –∞–¥–º–∏–Ω—É
    if(isAdmin(ADMIN_CHAT_ID)) {
        bot.sendMessage(ADMIN_CHAT_ID, `üéâ –ù–æ–≤—ã–π –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.from.first_name} (@${msg.from.username}) –Ω–∞ —Å—É–º–º—É ${msg.successful_payment.total_amount / 100} ${msg.successful_payment.currency}.`);
    }
});


// --- –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê ---
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

/*
 * =================================================================
 * –ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞ `products.json`
 * =================================================================
 * * –°–æ–∑–¥–∞–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, —á—Ç–æ –∏ `index.js`.
 * [
  {
    "id": 1694535311181,
    "name": "–•—É–¥–∏ 'Urban Explorer'",
    "price": 4500,
    "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ —Ö—É–¥–∏ –∏–∑ –ø–ª–æ—Ç–Ω–æ–≥–æ —Ö–ª–æ–ø–∫–∞. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –ø—Ä–æ–≥—É–ª–æ–∫.",
    "imageUrl": "https://placehold.co/600x600/222/fff?text=Hoodie"
  },
  {
    "id": 1694535348879,
    "name": "–§—É—Ç–±–æ–ª–∫–∞ 'Street Legacy'",
    "price": 2200,
    "description": "–§—É—Ç–±–æ–ª–∫–∞ —Å –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º –ø—Ä–∏–Ω—Ç–æ–º. –°–≤–æ–±–æ–¥–Ω—ã–π –∫—Ä–æ–π.",
    "imageUrl": "https://placehold.co/600x600/eee/000?text=T-Shirt"
  },
  {
    "id": 1694535384463,
    "name": "–ë—Ä—é–∫–∏-–∫–∞—Ä–≥–æ 'Navigator'",
    "price": 5100,
    "description": "–ü—Ä–æ—á–Ω—ã–µ –∏ —É–¥–æ–±–Ω—ã–µ –±—Ä—é–∫–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –∫–∞—Ä–º–∞–Ω–æ–≤.",
    "imageUrl": "https://placehold.co/600x600/555/fff?text=Pants"
  }
]
 *
 */
